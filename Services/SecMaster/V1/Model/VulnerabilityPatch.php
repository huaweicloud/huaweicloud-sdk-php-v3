<?php

namespace HuaweiCloud\SDK\SecMaster\V1\Model;

use \ArrayAccess;
use HuaweiCloud\SDK\Core\Utils\ObjectSerializer;
use HuaweiCloud\SDK\Core\Utils\ModelInterface;
use HuaweiCloud\SDK\Core\SdkResponse;

class VulnerabilityPatch implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
    * The original name of the model.
    *
    * @var string
    */
    protected static $openAPIModelName = 'VulnerabilityPatch';

    /**
    * Array of property to type mappings. Used for (de)serialization
    * patchId  补丁编号。
    * patchName  补丁名称。
    * type  补丁类型（0：linux，1：windows，2：web-cms）。
    * majorLevel  重要等级。
    * status  补丁状态。
    * repairCmd  修复命令。
    * repairNecessity  修复必要程度（1：需立刻修复，2：可延后修复，3：暂可以不修复）。
    * releaseTime  发布时间，格式ISO8601：YYYY-MM-DDTHH:mm:ss.ms+timezone。时区信息       为事件发生时区，无法解析时区的时间，默认时区填东八区。
    * referenceUrl  参考链接。
    * vendorName  漏洞报告提供者信息。
    * vulnerablePackage  受影响软件版本。
    * cveIds  CVE编号列表。
    *
    * @var string[]
    */
    protected static $openAPITypes = [
            'patchId' => 'string',
            'patchName' => 'string',
            'type' => 'string',
            'majorLevel' => 'string',
            'status' => 'string',
            'repairCmd' => 'string',
            'repairNecessity' => 'string',
            'releaseTime' => '\DateTime',
            'referenceUrl' => 'string',
            'vendorName' => 'string',
            'vulnerablePackage' => 'string',
            'cveIds' => 'string'
    ];

    /**
    * Array of property to format mappings. Used for (de)serialization
    * patchId  补丁编号。
    * patchName  补丁名称。
    * type  补丁类型（0：linux，1：windows，2：web-cms）。
    * majorLevel  重要等级。
    * status  补丁状态。
    * repairCmd  修复命令。
    * repairNecessity  修复必要程度（1：需立刻修复，2：可延后修复，3：暂可以不修复）。
    * releaseTime  发布时间，格式ISO8601：YYYY-MM-DDTHH:mm:ss.ms+timezone。时区信息       为事件发生时区，无法解析时区的时间，默认时区填东八区。
    * referenceUrl  参考链接。
    * vendorName  漏洞报告提供者信息。
    * vulnerablePackage  受影响软件版本。
    * cveIds  CVE编号列表。
    *
    * @var string[]
    */
    protected static $openAPIFormats = [
        'patchId' => null,
        'patchName' => null,
        'type' => null,
        'majorLevel' => null,
        'status' => null,
        'repairCmd' => null,
        'repairNecessity' => null,
        'releaseTime' => 'date-time',
        'referenceUrl' => null,
        'vendorName' => null,
        'vulnerablePackage' => null,
        'cveIds' => null
    ];

    /**
    * Array of property to type mappings. Used for (de)serialization
    *
    * @return array
    */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
    * Array of property to format mappings. Used for (de)serialization
    *
    * @return array
    */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
    * Array of attributes where the key is the local name,
    * and the value is the original name
    * patchId  补丁编号。
    * patchName  补丁名称。
    * type  补丁类型（0：linux，1：windows，2：web-cms）。
    * majorLevel  重要等级。
    * status  补丁状态。
    * repairCmd  修复命令。
    * repairNecessity  修复必要程度（1：需立刻修复，2：可延后修复，3：暂可以不修复）。
    * releaseTime  发布时间，格式ISO8601：YYYY-MM-DDTHH:mm:ss.ms+timezone。时区信息       为事件发生时区，无法解析时区的时间，默认时区填东八区。
    * referenceUrl  参考链接。
    * vendorName  漏洞报告提供者信息。
    * vulnerablePackage  受影响软件版本。
    * cveIds  CVE编号列表。
    *
    * @var string[]
    */
    protected static $attributeMap = [
            'patchId' => 'patch_id',
            'patchName' => 'patch_name',
            'type' => 'type',
            'majorLevel' => 'major_level',
            'status' => 'status',
            'repairCmd' => 'repair_cmd',
            'repairNecessity' => 'repair_necessity',
            'releaseTime' => 'release_time',
            'referenceUrl' => 'reference_url',
            'vendorName' => 'vendor_name',
            'vulnerablePackage' => 'vulnerable_package',
            'cveIds' => 'cve_ids'
    ];

    /**
    * Array of attributes to setter functions (for deserialization of responses)
    * patchId  补丁编号。
    * patchName  补丁名称。
    * type  补丁类型（0：linux，1：windows，2：web-cms）。
    * majorLevel  重要等级。
    * status  补丁状态。
    * repairCmd  修复命令。
    * repairNecessity  修复必要程度（1：需立刻修复，2：可延后修复，3：暂可以不修复）。
    * releaseTime  发布时间，格式ISO8601：YYYY-MM-DDTHH:mm:ss.ms+timezone。时区信息       为事件发生时区，无法解析时区的时间，默认时区填东八区。
    * referenceUrl  参考链接。
    * vendorName  漏洞报告提供者信息。
    * vulnerablePackage  受影响软件版本。
    * cveIds  CVE编号列表。
    *
    * @var string[]
    */
    protected static $setters = [
            'patchId' => 'setPatchId',
            'patchName' => 'setPatchName',
            'type' => 'setType',
            'majorLevel' => 'setMajorLevel',
            'status' => 'setStatus',
            'repairCmd' => 'setRepairCmd',
            'repairNecessity' => 'setRepairNecessity',
            'releaseTime' => 'setReleaseTime',
            'referenceUrl' => 'setReferenceUrl',
            'vendorName' => 'setVendorName',
            'vulnerablePackage' => 'setVulnerablePackage',
            'cveIds' => 'setCveIds'
    ];

    /**
    * Array of attributes to getter functions (for serialization of requests)
    * patchId  补丁编号。
    * patchName  补丁名称。
    * type  补丁类型（0：linux，1：windows，2：web-cms）。
    * majorLevel  重要等级。
    * status  补丁状态。
    * repairCmd  修复命令。
    * repairNecessity  修复必要程度（1：需立刻修复，2：可延后修复，3：暂可以不修复）。
    * releaseTime  发布时间，格式ISO8601：YYYY-MM-DDTHH:mm:ss.ms+timezone。时区信息       为事件发生时区，无法解析时区的时间，默认时区填东八区。
    * referenceUrl  参考链接。
    * vendorName  漏洞报告提供者信息。
    * vulnerablePackage  受影响软件版本。
    * cveIds  CVE编号列表。
    *
    * @var string[]
    */
    protected static $getters = [
            'patchId' => 'getPatchId',
            'patchName' => 'getPatchName',
            'type' => 'getType',
            'majorLevel' => 'getMajorLevel',
            'status' => 'getStatus',
            'repairCmd' => 'getRepairCmd',
            'repairNecessity' => 'getRepairNecessity',
            'releaseTime' => 'getReleaseTime',
            'referenceUrl' => 'getReferenceUrl',
            'vendorName' => 'getVendorName',
            'vulnerablePackage' => 'getVulnerablePackage',
            'cveIds' => 'getCveIds'
    ];

    /**
    * Array of attributes where the key is the local name,
    * and the value is the original name
    *
    * @return array
    */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
    * Array of attributes to setter functions (for deserialization of responses)
    *
    * @return array
    */
    public static function setters()
    {
        return self::$setters;
    }

    /**
    * Array of attributes to getter functions (for serialization of requests)
    *
    * @return array
    */
    public static function getters()
    {
        return self::$getters;
    }

    /**
    * The original name of the model.
    *
    * @return string
    */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }
    


    /**
    * Associative array for storing property values
    *
    * @var mixed[]
    */
    protected $container = [];

    /**
    * Constructor
    *
    * @param mixed[] $data Associated array of property values
    *                      initializing the model
    */
    public function __construct(array $data = null)
    {
        $this->container['patchId'] = isset($data['patchId']) ? $data['patchId'] : null;
        $this->container['patchName'] = isset($data['patchName']) ? $data['patchName'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
        $this->container['majorLevel'] = isset($data['majorLevel']) ? $data['majorLevel'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['repairCmd'] = isset($data['repairCmd']) ? $data['repairCmd'] : null;
        $this->container['repairNecessity'] = isset($data['repairNecessity']) ? $data['repairNecessity'] : null;
        $this->container['releaseTime'] = isset($data['releaseTime']) ? $data['releaseTime'] : null;
        $this->container['referenceUrl'] = isset($data['referenceUrl']) ? $data['referenceUrl'] : null;
        $this->container['vendorName'] = isset($data['vendorName']) ? $data['vendorName'] : null;
        $this->container['vulnerablePackage'] = isset($data['vulnerablePackage']) ? $data['vulnerablePackage'] : null;
        $this->container['cveIds'] = isset($data['cveIds']) ? $data['cveIds'] : null;
    }

    /**
    * Show all the invalid properties with reasons.
    *
    * @return array invalid properties with reasons
    */
    public function listInvalidProperties()
    {
        $invalidProperties = [];
        if ($this->container['patchId'] === null) {
            $invalidProperties[] = "'patchId' can't be null";
        }
            if ((mb_strlen($this->container['patchId']) > 256)) {
                $invalidProperties[] = "invalid value for 'patchId', the character length must be smaller than or equal to 256.";
            }
            if ((mb_strlen($this->container['patchId']) < 1)) {
                $invalidProperties[] = "invalid value for 'patchId', the character length must be bigger than or equal to 1.";
            }
            if (!is_null($this->container['patchName']) && (mb_strlen($this->container['patchName']) > 256)) {
                $invalidProperties[] = "invalid value for 'patchName', the character length must be smaller than or equal to 256.";
            }
            if (!is_null($this->container['patchName']) && (mb_strlen($this->container['patchName']) < 1)) {
                $invalidProperties[] = "invalid value for 'patchName', the character length must be bigger than or equal to 1.";
            }
            if (!is_null($this->container['type']) && (mb_strlen($this->container['type']) > 32)) {
                $invalidProperties[] = "invalid value for 'type', the character length must be smaller than or equal to 32.";
            }
            if (!is_null($this->container['type']) && (mb_strlen($this->container['type']) < 1)) {
                $invalidProperties[] = "invalid value for 'type', the character length must be bigger than or equal to 1.";
            }
            if (!is_null($this->container['majorLevel']) && (mb_strlen($this->container['majorLevel']) > 32)) {
                $invalidProperties[] = "invalid value for 'majorLevel', the character length must be smaller than or equal to 32.";
            }
            if (!is_null($this->container['majorLevel']) && (mb_strlen($this->container['majorLevel']) < 1)) {
                $invalidProperties[] = "invalid value for 'majorLevel', the character length must be bigger than or equal to 1.";
            }
            if (!is_null($this->container['status']) && (mb_strlen($this->container['status']) > 32)) {
                $invalidProperties[] = "invalid value for 'status', the character length must be smaller than or equal to 32.";
            }
            if (!is_null($this->container['status']) && (mb_strlen($this->container['status']) < 1)) {
                $invalidProperties[] = "invalid value for 'status', the character length must be bigger than or equal to 1.";
            }
            if (!is_null($this->container['repairCmd']) && (mb_strlen($this->container['repairCmd']) > 512)) {
                $invalidProperties[] = "invalid value for 'repairCmd', the character length must be smaller than or equal to 512.";
            }
            if (!is_null($this->container['repairCmd']) && (mb_strlen($this->container['repairCmd']) < 0)) {
                $invalidProperties[] = "invalid value for 'repairCmd', the character length must be bigger than or equal to 0.";
            }
            if (!is_null($this->container['repairNecessity']) && (mb_strlen($this->container['repairNecessity']) > 512)) {
                $invalidProperties[] = "invalid value for 'repairNecessity', the character length must be smaller than or equal to 512.";
            }
            if (!is_null($this->container['repairNecessity']) && (mb_strlen($this->container['repairNecessity']) < 0)) {
                $invalidProperties[] = "invalid value for 'repairNecessity', the character length must be bigger than or equal to 0.";
            }
            if (!is_null($this->container['referenceUrl']) && (mb_strlen($this->container['referenceUrl']) > 512)) {
                $invalidProperties[] = "invalid value for 'referenceUrl', the character length must be smaller than or equal to 512.";
            }
            if (!is_null($this->container['referenceUrl']) && (mb_strlen($this->container['referenceUrl']) < 0)) {
                $invalidProperties[] = "invalid value for 'referenceUrl', the character length must be bigger than or equal to 0.";
            }
            if (!is_null($this->container['vendorName']) && (mb_strlen($this->container['vendorName']) > 32)) {
                $invalidProperties[] = "invalid value for 'vendorName', the character length must be smaller than or equal to 32.";
            }
            if (!is_null($this->container['vendorName']) && (mb_strlen($this->container['vendorName']) < 1)) {
                $invalidProperties[] = "invalid value for 'vendorName', the character length must be bigger than or equal to 1.";
            }
            if (!is_null($this->container['vulnerablePackage']) && (mb_strlen($this->container['vulnerablePackage']) > 32)) {
                $invalidProperties[] = "invalid value for 'vulnerablePackage', the character length must be smaller than or equal to 32.";
            }
            if (!is_null($this->container['vulnerablePackage']) && (mb_strlen($this->container['vulnerablePackage']) < 1)) {
                $invalidProperties[] = "invalid value for 'vulnerablePackage', the character length must be bigger than or equal to 1.";
            }
            if (!is_null($this->container['cveIds']) && (mb_strlen($this->container['cveIds']) > 256)) {
                $invalidProperties[] = "invalid value for 'cveIds', the character length must be smaller than or equal to 256.";
            }
            if (!is_null($this->container['cveIds']) && (mb_strlen($this->container['cveIds']) < 1)) {
                $invalidProperties[] = "invalid value for 'cveIds', the character length must be bigger than or equal to 1.";
            }
        return $invalidProperties;
    }

    /**
    * Validate all the properties in the model
    * return true if all passed
    *
    * @return bool True if all properties are valid
    */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }

    /**
    * Gets patchId
    *  补丁编号。
    *
    * @return string
    */
    public function getPatchId()
    {
        return $this->container['patchId'];
    }

    /**
    * Sets patchId
    *
    * @param string $patchId 补丁编号。
    *
    * @return $this
    */
    public function setPatchId($patchId)
    {
        $this->container['patchId'] = $patchId;
        return $this;
    }

    /**
    * Gets patchName
    *  补丁名称。
    *
    * @return string|null
    */
    public function getPatchName()
    {
        return $this->container['patchName'];
    }

    /**
    * Sets patchName
    *
    * @param string|null $patchName 补丁名称。
    *
    * @return $this
    */
    public function setPatchName($patchName)
    {
        $this->container['patchName'] = $patchName;
        return $this;
    }

    /**
    * Gets type
    *  补丁类型（0：linux，1：windows，2：web-cms）。
    *
    * @return string|null
    */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
    * Sets type
    *
    * @param string|null $type 补丁类型（0：linux，1：windows，2：web-cms）。
    *
    * @return $this
    */
    public function setType($type)
    {
        $this->container['type'] = $type;
        return $this;
    }

    /**
    * Gets majorLevel
    *  重要等级。
    *
    * @return string|null
    */
    public function getMajorLevel()
    {
        return $this->container['majorLevel'];
    }

    /**
    * Sets majorLevel
    *
    * @param string|null $majorLevel 重要等级。
    *
    * @return $this
    */
    public function setMajorLevel($majorLevel)
    {
        $this->container['majorLevel'] = $majorLevel;
        return $this;
    }

    /**
    * Gets status
    *  补丁状态。
    *
    * @return string|null
    */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
    * Sets status
    *
    * @param string|null $status 补丁状态。
    *
    * @return $this
    */
    public function setStatus($status)
    {
        $this->container['status'] = $status;
        return $this;
    }

    /**
    * Gets repairCmd
    *  修复命令。
    *
    * @return string|null
    */
    public function getRepairCmd()
    {
        return $this->container['repairCmd'];
    }

    /**
    * Sets repairCmd
    *
    * @param string|null $repairCmd 修复命令。
    *
    * @return $this
    */
    public function setRepairCmd($repairCmd)
    {
        $this->container['repairCmd'] = $repairCmd;
        return $this;
    }

    /**
    * Gets repairNecessity
    *  修复必要程度（1：需立刻修复，2：可延后修复，3：暂可以不修复）。
    *
    * @return string|null
    */
    public function getRepairNecessity()
    {
        return $this->container['repairNecessity'];
    }

    /**
    * Sets repairNecessity
    *
    * @param string|null $repairNecessity 修复必要程度（1：需立刻修复，2：可延后修复，3：暂可以不修复）。
    *
    * @return $this
    */
    public function setRepairNecessity($repairNecessity)
    {
        $this->container['repairNecessity'] = $repairNecessity;
        return $this;
    }

    /**
    * Gets releaseTime
    *  发布时间，格式ISO8601：YYYY-MM-DDTHH:mm:ss.ms+timezone。时区信息       为事件发生时区，无法解析时区的时间，默认时区填东八区。
    *
    * @return \DateTime|null
    */
    public function getReleaseTime()
    {
        return $this->container['releaseTime'];
    }

    /**
    * Sets releaseTime
    *
    * @param \DateTime|null $releaseTime 发布时间，格式ISO8601：YYYY-MM-DDTHH:mm:ss.ms+timezone。时区信息       为事件发生时区，无法解析时区的时间，默认时区填东八区。
    *
    * @return $this
    */
    public function setReleaseTime($releaseTime)
    {
        $this->container['releaseTime'] = $releaseTime;
        return $this;
    }

    /**
    * Gets referenceUrl
    *  参考链接。
    *
    * @return string|null
    */
    public function getReferenceUrl()
    {
        return $this->container['referenceUrl'];
    }

    /**
    * Sets referenceUrl
    *
    * @param string|null $referenceUrl 参考链接。
    *
    * @return $this
    */
    public function setReferenceUrl($referenceUrl)
    {
        $this->container['referenceUrl'] = $referenceUrl;
        return $this;
    }

    /**
    * Gets vendorName
    *  漏洞报告提供者信息。
    *
    * @return string|null
    */
    public function getVendorName()
    {
        return $this->container['vendorName'];
    }

    /**
    * Sets vendorName
    *
    * @param string|null $vendorName 漏洞报告提供者信息。
    *
    * @return $this
    */
    public function setVendorName($vendorName)
    {
        $this->container['vendorName'] = $vendorName;
        return $this;
    }

    /**
    * Gets vulnerablePackage
    *  受影响软件版本。
    *
    * @return string|null
    */
    public function getVulnerablePackage()
    {
        return $this->container['vulnerablePackage'];
    }

    /**
    * Sets vulnerablePackage
    *
    * @param string|null $vulnerablePackage 受影响软件版本。
    *
    * @return $this
    */
    public function setVulnerablePackage($vulnerablePackage)
    {
        $this->container['vulnerablePackage'] = $vulnerablePackage;
        return $this;
    }

    /**
    * Gets cveIds
    *  CVE编号列表。
    *
    * @return string|null
    */
    public function getCveIds()
    {
        return $this->container['cveIds'];
    }

    /**
    * Sets cveIds
    *
    * @param string|null $cveIds CVE编号列表。
    *
    * @return $this
    */
    public function setCveIds($cveIds)
    {
        $this->container['cveIds'] = $cveIds;
        return $this;
    }

    /**
    * Returns true if offset exists. False otherwise.
    *
    * @param integer $offset Offset
    *
    * @return boolean
    */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
    * Gets offset.
    *
    * @param integer $offset Offset
    *
    * @return mixed
    */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
    * Sets value based on offset.
    *
    * @param integer $offset Offset
    * @param mixed   $value  Value to be set
    *
    * @return void
    */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
                $this->container[] = $value;
            } else {
                $this->container[$offset] = $value;
        }
    }

    /**
    * Unsets offset.
    *
    * @param integer $offset Offset
    *
    * @return void
    */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
    * Gets the string presentation of the object
    *
    * @return string
    */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }
}

